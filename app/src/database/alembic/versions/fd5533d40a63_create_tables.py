"""Create tables

Revision ID: fd5533d40a63
Revises: 
Create Date: 2024-12-03 22:28:10.074923

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fd5533d40a63'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('attraction_type',
    sa.Column('attraction_type_id', sa.Integer(), nullable=False),
    sa.Column('attraction_type', sa.String(length=120), nullable=True),
    sa.Column('restaurant_type', sa.String(length=120), nullable=True),
    sa.PrimaryKeyConstraint('attraction_type_id')
    )
    op.create_table('itinerary',
    sa.Column('itinerary_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('budget', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('itinerary_id')
    )
    op.create_table('user',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=120), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('age', sa.Integer(), nullable=False),
    sa.Column('gender', sa.String(length=1), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('attraction',
    sa.Column('attraction_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('operating_hours', sa.String(length=120), nullable=True),
    sa.Column('description', sa.String(length=120), nullable=True),
    sa.Column('photo', sa.String(length=120), nullable=True),
    sa.Column('attraction_type', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['attraction_type'], ['attraction_type.attraction_type_id'], ),
    sa.PrimaryKeyConstraint('attraction_id')
    )
    op.create_table('owns',
    sa.Column('owns_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('itinerary_id', sa.Integer(), nullable=False),
    sa.Column('preference', sa.String(length=120), nullable=True),
    sa.ForeignKeyConstraint(['itinerary_id'], ['itinerary.itinerary_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('owns_id')
    )
    op.create_table('feedback',
    sa.Column('feedback_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('itinerary_id', sa.Integer(), nullable=False),
    sa.Column('attraction_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('comment', sa.String(length=120), nullable=True),
    sa.ForeignKeyConstraint(['attraction_id'], ['attraction.attraction_id'], ),
    sa.ForeignKeyConstraint(['itinerary_id'], ['itinerary.itinerary_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('feedback_id')
    )
    op.create_table('includes',
    sa.Column('includes_id', sa.Integer(), nullable=False),
    sa.Column('itinerary_id', sa.Integer(), nullable=False),
    sa.Column('attraction_id', sa.Integer(), nullable=False),
    sa.Column('time_of_day', sa.String(length=120), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['attraction_id'], ['attraction.attraction_id'], ),
    sa.ForeignKeyConstraint(['itinerary_id'], ['itinerary.itinerary_id'], ),
    sa.PrimaryKeyConstraint('includes_id')
    )
    op.create_table('restaurant',
    sa.Column('restaurant_id', sa.Integer(), nullable=False),
    sa.Column('attraction_id', sa.Integer(), nullable=False),
    sa.Column('restaurant_type', sa.Integer(), nullable=False),
    sa.Column('vegetarian', sa.Boolean(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['attraction_id'], ['attraction.attraction_id'], ),
    sa.ForeignKeyConstraint(['restaurant_type'], ['attraction_type.attraction_type_id'], ),
    sa.PrimaryKeyConstraint('restaurant_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('restaurant')
    op.drop_table('includes')
    op.drop_table('feedback')
    op.drop_table('owns')
    op.drop_table('attraction')
    op.drop_table('user')
    op.drop_table('itinerary')
    op.drop_table('attraction_type')
    # ### end Alembic commands ###
